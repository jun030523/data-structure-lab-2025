{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPq5TQToC0QS4BN1Orr6jlw",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jun030523/data-structure-lab-2025/blob/master/Lec08_Sorting%20(Insertion%20Sort%2C%20Quick%20Sort)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Insertion Sort"
      ],
      "metadata": {
        "id": "GxC0WeJGDhTL"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "-HrQsnHLCPVR"
      },
      "outputs": [],
      "source": [
        "def insertion_sort(a_list):\n",
        "    for index in range(1, len(a_list)):\n",
        "        current_value = a_list[index]\n",
        "        position = index\n",
        "\n",
        "        while position > 0 and a_list[position - 1] > current_value:\n",
        "            a_list[position] = a_list[position - 1]\n",
        "            position = position - 1\n",
        "\n",
        "        a_list[position] = current_value\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Quick Sort"
      ],
      "metadata": {
        "id": "gpQIL2pzDYSM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def quick_sort(a_list):\n",
        "    quick_sort_helper(a_list, 0, len(a_list) - 1)\n",
        "\n",
        "def quick_sort_helper(a_list, first, last):\n",
        "    if first < last:\n",
        "        split_point = partition(a_list, first, last)\n",
        "\n",
        "        quick_sort_helper(a_list, first, split_point - 1)\n",
        "        quick_sort_helper(a_list, split_point + 1, last)"
      ],
      "metadata": {
        "id": "NZmRQ4YaDDVe"
      },
      "execution_count": 3,
      "outputs": []
    }
  ]
}